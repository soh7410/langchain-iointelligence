# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
test_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmyson

# Pyre type checker
.pyre/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
# PyPI credentials
.pypirc

# Backup files
*.bak
*.backup

# Build scripts output
test_*_env/

# Shell scripts (keep source, ignore output)
*.sh.log

# Development tools output
.coverage.*
.pytest_cache/
.mypy_cache/

# ========== 今回のリファクタリングで追加 ==========
# Development/testing scripts (temporary)
run_tests_guide.py
diagnose_issues.py
test_results_guide.py
analyze_files.py
check_syntax.py
final_verification.py
fix_installation.py
fix_lint_errors.py
run_chat_tests.py
run_direct_tests.py
simple_test.py
test_complete_solution.py
test_refactoring.py
verify_basic.py
check_flake8.py
quick_fix_test.py
quick_test.py
test_critical_fixes.sh
test_demo_fix.sh
test_final_mvp.sh
test_new_lint_config.sh
test_production_readiness.sh
lint_and_test.sh

# Temporary documentation/notes
COMMIT_MESSAGE.md
LINT_OPTIONS.md
PUSH_CHECKLIST.md

# Alternative configurations
.flake8.ultra-relaxed

# Environment setup scripts (temporary) 
check_test_environment.sh
fix_pytest_environment.sh
delete_pytest_ini
emergency_test.sh
fix_imports.sh
format_code.sh

# Unknown temporary files
=*

# Shell script logs
*.sh.log
