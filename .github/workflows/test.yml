name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 langchain_iointelligence/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Main lint check with relaxed rules for practical development
        flake8 langchain_iointelligence/ tests/ --count --max-complexity=10 --statistics
    
    - name: Type check with mypy  
      run: |
        mypy langchain_iointelligence/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # Type checking errors shouldn't fail the build
    
    - name: Test with pytest
      env:
        IO_API_KEY: test_api_key_for_github_actions
        IO_API_URL: https://test.example.com/v1/chat/completions
      run: |
        pytest tests/ --cov=langchain_iointelligence --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # Don't fail if coverage upload fails

  lint-format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install formatting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort
    
    - name: Check code formatting with black
      run: |
        black --check --diff langchain_iointelligence/ tests/ examples/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff langchain_iointelligence/ tests/ examples/
